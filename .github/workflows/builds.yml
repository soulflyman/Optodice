name: 🐧 🍎 🏁 Builds
on: [ push, pull_request ]

env:
  CARGO_TERM_COLOR: always

jobs:
  linux:

    runs-on: ubuntu-latest

    steps:
    - name: Install basic libraries
      run: sudo apt-get update; sudo apt install libgtk-3-dev -y
    - uses: actions/checkout@v2
    - name: Build
      run: cargo build --release
    - name: Artifacts - Create collection folder
      run: mkdir artifacts
    - name: Artifacts - Collect optodice
      run: mv target/release/optodice artifacts/
    - name: Artifacts - Collect skills.json
      run: mv skills.json artifacts/
    - name: Artifacts - Collect attributes.json
      run: mv attributes.json artifacts/
    - name: Artifacts - Collect CombatTechniques.yaml
      run: mv CombatTechniques.yaml artifacts/
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.2.2
      with:
        name: optodice-linux
        # Artifact name
        #name: # optional, default is artifact
        # A file, directory or wildcard pattern that describes what to upload
        path: artifacts
        # The desired behavior if no files are found using the provided path.
        if-no-files-found: error # optional, default is warn
        #retention-days: # optional

  macos:
    strategy:
      matrix:
        toolchain: [ stable ]
        type: [ release ]
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          override: true

      - name: Install Homebrew
        run: /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

      - name: Override link[WORKAROUND] # Looks that this is a bug with current homebrew or Github CI
        run: rm '/usr/local/bin/2to3'

      - name: Install GTK3
        run: brew install rust gtk+3

      - name: Build
        run: cargo build --release --bin optodice
        env:
          CARGO_INCREMENTAL: 0
          RUSTFLAGS: "-C debuginfo=0"
        if: ${{ matrix.type == 'release'}}

      - name: Store MacOS Build
        uses: actions/upload-artifact@v2
        with:
          name: optodice-macos
          path: target/release/optodice
        if: ${{ matrix.type == 'release' }}

  windows:
    strategy:
      matrix:
        toolchain: [ stable ]
        type: [ release ]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - uses: actions/cache@v2
        with:
          path: |
            target
          key: windows-gui-${{github.ref}}-${{github.sha}}
          restore-keys: |
            windows-gui-${{github.ref}}-${{github.sha}}

      - name: Install Gtk, Mingw, unzip, zip and wget
        run: sudo apt-get update; sudo apt install mingw-w64 libgtk-3-dev unzip wget zip -y

      - name: Build GUI Release Cross Compile
        run: |
          rustup target add x86_64-pc-windows-gnu

          echo "[target.x86_64-pc-windows-gnu]" > ~/.cargo/config
          echo "linker = \"x86_64-w64-mingw32-gcc\"" >> ~/.cargo/config
          echo "ar = \"x86_64-w64-mingw32-gcc-ar\"" >> ~/.cargo/config

          GTK_LIBRARY="$(pwd)/gtk_library"
          GTK_APP="$(pwd)/gtk_app"
          GTK_THEME="$(pwd)/gtk_theme"

          wget https://github.com/qarmin/gtk_library_store/releases/download/3.24.0/mingw64.zip
          unzip mingw64.zip -d $GTK_LIBRARY
          GTK_LIBRARY="$GTK_LIBRARY/mingw64"

          wget https://github.com/nrhodes91/AdMin/archive/master.zip
          unzip master.zip -d $GTK_THEME

          PKG_CONFIG_ALLOW_CROSS=1 PKG_CONFIG_PATH="$GTK_LIBRARY/lib/pkgconfig" RUSTFLAGS="-L $GTK_LIBRARY/lib" cargo build --target=x86_64-pc-windows-gnu --bin optodice --release

          strip target/x86_64-pc-windows-gnu/release/optodice.exe

          mkdir $GTK_APP
          cp target/x86_64-pc-windows-gnu/release/optodice.exe $GTK_APP
          cp skills.json $GTK_APP
          cp attributes.json $GTK_APP
          cp CombatTechniques.yaml $GTK_APP
          cp $GTK_LIBRARY/bin/*.dll $GTK_APP
          mkdir -p $GTK_APP/share/glib-2.0/schemas
          mkdir $GTK_APP/share/icons
          cp $GTK_LIBRARY/share/glib-2.0/schemas/* $GTK_APP/share/glib-2.0/schemas
          cp -r $GTK_LIBRARY/share/icons/* $GTK_APP/share/icons
          mkdir $GTK_APP/lib
          cp -r $GTK_LIBRARY/lib/gdk-pixbuf-2.0 $GTK_APP/lib

          mkdir -p $GTK_APP/share/themes
          mkdir -p $GTK_APP/share/gtk-3.0
          echo "[Settings]" > $GTK_APP/share/gtk-3.0/settings.ini
          echo "gtk-theme-name = admin-gtk3-dark-osx" >> $GTK_APP/share/gtk-3.0/settings.ini
          echo "gtk-font-name = Segoe UI 10" >> $GTK_APP/share/gtk-3.0/settings.ini
          echo "gtk-xft-rgba = rgb" >> $GTK_APP/share/gtk-3.0/settings.ini
          cp $GTK_THEME/AdMin-master/admin-gtk3-dark-osx $GTK_APP/share/themes -r -L

          zip -r gtk_app.zip $GTK_APP
        env:
          CARGO_INCREMENTAL: 0
          RUSTFLAGS: "-C debuginfo=0 -D warnings"
        if: ${{ matrix.type == 'release'}}

      - name: Store Windows GUI CrossComplile
        uses: actions/upload-artifact@v2
        with:
          name: optodice-windows
          path: gtk_app/*
        if: ${{ matrix.type == 'release' }}
